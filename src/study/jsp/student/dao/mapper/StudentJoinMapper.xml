<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 -->
<mapper namespace="StudentJoinMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="student_department_professor" type="study.jsp.student.model.StudentDepartmentProfessor">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="studno" 	column="studno" />
		<result property="name" 	column="name" />
		<result property="userid" 	column="userid" />
		<result property="grade" column="grade" />
		<result property="idnum" 		column="idnum" />
		<result property="birthdate" column="birthdate" />
		<result property="tel" 	column="tel" />
		<result property="height" 	column="height" />
		<result property="weight" 	column="weight" />
		<result property="deptno" 	column="deptno" />
		<result property="dname" 	column="dname" />
		<result property="profno" 	column="profno" />
		<result property="pname" 	column="pname" />
	</resultMap>
	
	<!-- 교수+학과 테이블을 조인하여 목록 조회 -->
	<!--
		다중행 조회(목록조회)를 위한 기능 정의
		<select id="메서드이름" resultMap="리턴될 Beans의 id">
	-->
	<select id="selectStudentJoinList" parameterType="study.jsp.student.model.StudentDepartmentProfessor"
    resultMap="student_department_professor">
      <!-- 이 안에서 처리할 SQL문을 명시한다. -->
      SELECT
         s.studno, s.name as name, s.userid as userid, s.grade, s.idnum as idnum, 
         DATE_FORMAT(birthdate, '%Y-%m-%d') AS birthdate, 
         s.tel, s.height, s.weight, s.deptno as deptno, s.profno as profno, d.dname as dname, p.name as pname
      FROM student s
      INNER JOIN department d ON s.deptno=d.deptno
      left outer JOIN professor p ON s.profno=p.profno
      
      <where>
         <if test="name != null and name != ''">
            s.name LIKE concat('%', #{name}, '%')
         </if>
      </where>
      ORDER BY studno ASC
      LIMIT #{limitStart}, #{listCount}
   </select>

	
	<!-- 교수 + 학과 테이블을 조인하여 상세조회 -->
	<select id="selectStudentJoinItem"
			parameterType="study.jsp.student.model.StudentDepartmentProfessor"
			resultMap="student_department_professor">
	
	SELECT  studno, s.name, s.userid, s.grade, s.idnum, DATE_FORMAT(birthdate, '%Y-%m-%d') AS birthdate, 
      tel, height, weight, d.dname as dname, p.name as pname 
      FROM student s
      INNER JOIN department d ON s.deptno=d.deptno
      Left outer JOIN professor p ON s.profno=p.profno
      WHERE studno=#{studno}
	</select>
	
	<!-- 조인 결과에 대한 전체 데이터 수 얻기 -->
	<select id="selectStudentCount"
      parameterType="study.jsp.student.model.StudentDepartmentProfessor"
      resultType="int">
      SELECT count(studno)
      FROM student INNER JOIN department ON student.deptno=department.deptno
      <where>
         <if test="name != null and name != ''">
            student.name LIKE concat('%', #{name}, '%')
         </if>
      </where>   
   </select>
</mapper>
